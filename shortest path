def shortest_path_city1_to_city3(n, edges):
    dist = [[float('inf')] * n for _ in range(n)]
    
    for i in range(n):
        dist[i][i] = 0
    
    for u, v, w in edges:
        dist[u][v] = w
    for k in range(n):
        for i in range(n):
            for j in range(n):
                dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j])
    print("Distance Matrix:")
    for row in dist:
        print(row)
        shortest_path = dist[0][2]
    
    return shortest_path

# Test case for City 1 to City 3
n = 4
edges = [[0,1,3],[1,2,1],[1,3,4],[2,3,1]]
shortest_path = shortest_path_city1_to_city3(n, edges)
print("Shortest path from City 1 to City 3:", shortest_path)
