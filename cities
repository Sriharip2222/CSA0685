from itertools import permutations
distances = {
    ('A', 'B'): 10, ('A', 'C'): 15, ('A', 'D'): 20, ('A', 'E'): 25,
    ('B', 'C'): 35, ('B', 'D'): 25, ('B', 'E'): 30,
    ('C', 'D'): 30, ('C', 'E'): 20,
    ('D', 'E'): 15
}
cities = ['A', 'B', 'C', 'D', 'E']
min_distance = float('inf')
best_route = None
for route in permutations(cities):
    route_distance = sum(distances.get((route[i], route[i + 1]), distances.get((route[i + 1], route[i]))) for i in range(len(route) - 1))
    if route_distance < min_distance:
        min_distance = route_distance
        best_route = route
print(f"The shortest route is: {' -> '.join(best_route)} -> {best_route[0]} with a total distance of {min_distance}.")
